generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  name            String
  userId          String            @unique
  phone           String            @unique
  password        String
  reservedClasses Class[]
  accounts        Account?
  purchaseProduct PurchaseProduct[]
  reviews         Review[]
}

model Account {
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [userId], references:[id], onDelete: Cascade)
  userId       Int      @unique
  accessToken  String
  refreshToken String
}

model Class {
  id            Int      @id @default(autoincrement())
  name          String   @unique
  price         Int
  discount      Int      @default(0)
  description   String
  descImg       String[]
  classDuration Int
  user          User?    @relation(fields: userId, references: [id])
  userId        Int?
}

model Product {
  id          Int               @id @default(autoincrement())
  name        String            @unique
  price       Int
  discount    Int
  description String
  descImg     String[]
  deliver     Boolean
  categories  String[]
  purchased   PurchaseProduct[]
}

model PurchaseProduct {
  purchaseId  Int      @id @default(autoincrement())
  purchasedAt DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  product     Product  @relation(fields: [productId], references: [id])
  productId   Int
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime
  isSecret  Boolean  @default(false)
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}
